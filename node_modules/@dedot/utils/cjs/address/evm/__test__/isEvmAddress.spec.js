"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Copyright 2017-2024 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
const vitest_1 = require("vitest");
const isEvmAddress_js_1 = require("../isEvmAddress.js");
const ADDRESS = '0x00a329c0648769A73afAc7F9381E08FB43dBEA72';
(0, vitest_1.describe)('isEvmAddress', () => {
    (0, vitest_1.it)('returns true when fully lowercase', () => {
        (0, vitest_1.expect)((0, isEvmAddress_js_1.isEvmAddress)(ADDRESS.toLowerCase())).toBe(true);
    });
    (0, vitest_1.it)('returns true when fully uppercase', () => {
        (0, vitest_1.expect)((0, isEvmAddress_js_1.isEvmAddress)(ADDRESS.toUpperCase().replace('0X', '0x'))).toBe(true);
    });
    (0, vitest_1.it)('returns true when checksummed', () => {
        (0, vitest_1.expect)((0, isEvmAddress_js_1.isEvmAddress)(ADDRESS)).toBe(true);
    });
    (0, vitest_1.it)('returns false when empty address', () => {
        (0, vitest_1.expect)((0, isEvmAddress_js_1.isEvmAddress)()).toBe(false);
    });
    (0, vitest_1.it)('returns false when invalid address', () => {
        (0, vitest_1.expect)((0, isEvmAddress_js_1.isEvmAddress)('0xinvalid')).toBe(false);
    });
    (0, vitest_1.it)('returns false when invalid address of correct length', () => {
        (0, vitest_1.expect)((0, isEvmAddress_js_1.isEvmAddress)('0xinvalid000123456789012345678901234567890')).toBe(false);
    });
});
