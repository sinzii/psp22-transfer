"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Copyright 2017-2024 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
const vitest_1 = require("vitest");
const isEvmChecksum_js_1 = require("../isEvmChecksum.js");
const ADDRESS = '0x00a329c0648769A73afAc7F9381E08FB43dBEA72';
(0, vitest_1.describe)('isEvmChecksum', () => {
    (0, vitest_1.it)('returns false on invalid address', () => {
        (0, vitest_1.expect)((0, isEvmChecksum_js_1.isEvmChecksum)('0x00a329c0648769')).toBe(false);
    });
    (0, vitest_1.it)('returns false on non-checksum address', () => {
        (0, vitest_1.expect)((0, isEvmChecksum_js_1.isEvmChecksum)('0x1234567890abcdeedcba1234567890abcdeedcba')).toBe(false);
    });
    (0, vitest_1.it)('returns false when fully lowercase', () => {
        (0, vitest_1.expect)((0, isEvmChecksum_js_1.isEvmChecksum)(ADDRESS.toLowerCase())).toBe(false);
    });
    (0, vitest_1.it)('returns false when fully uppercase', () => {
        (0, vitest_1.expect)((0, isEvmChecksum_js_1.isEvmChecksum)(ADDRESS.toUpperCase().replace('0X', '0x'))).toBe(false);
    });
    (0, vitest_1.it)('returns true on a checksummed address', () => {
        (0, vitest_1.expect)((0, isEvmChecksum_js_1.isEvmChecksum)(ADDRESS)).toBe(true);
    });
});
