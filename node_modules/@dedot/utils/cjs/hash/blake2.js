"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.blake2AsHex = exports.blake2AsU8a = void 0;
// Copyright 2017-2024 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Original implementation: https://github.com/polkadot-js/common/blob/22aab4a4e62944a2cf8c885f50be2c1b842813ec/packages/util-crypto/src/blake2/asU8a.ts
const blake2b_1 = require("@noble/hashes/blake2b");
const to_js_1 = require("../to.js");
const u8a_js_1 = require("../u8a.js");
function blake2AsU8a(data, bitLength = 256, key) {
    const byteLength = Math.ceil(bitLength / 8);
    const u8a = (0, to_js_1.toU8a)(data);
    return key ? (0, blake2b_1.blake2b)(u8a, { dkLen: byteLength, key }) : (0, blake2b_1.blake2b)(u8a, { dkLen: byteLength });
}
exports.blake2AsU8a = blake2AsU8a;
function blake2AsHex(data, bitLength, key) {
    return (0, u8a_js_1.u8aToHex)(blake2AsU8a(data, bitLength, key));
}
exports.blake2AsHex = blake2AsHex;
