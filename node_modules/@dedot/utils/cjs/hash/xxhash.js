"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.xxhashAsHex = exports.xxhashAsU8a = void 0;
// Copyright 2017-2024 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Original implementation: https://github.com/polkadot-js/common/blob/22aab4a4e62944a2cf8c885f50be2c1b842813ec/packages/util-crypto/src/xxhash/asU8a.ts
const to_js_1 = require("../to.js");
const u8a_js_1 = require("../u8a.js");
const xxhash64_js_1 = require("./xxhash64.js");
function xxhashAsU8a(data, bitLength = 64) {
    const rounds = Math.ceil(bitLength / 64);
    const u8a = (0, to_js_1.toU8a)(data);
    const result = new Uint8Array(rounds * 8);
    for (let seed = 0; seed < rounds; seed++) {
        result.set((0, xxhash64_js_1.xxhash64)(u8a, seed).reverse(), seed * 8);
    }
    return result;
}
exports.xxhashAsU8a = xxhashAsU8a;
function xxhashAsHex(data, bitLength) {
    return (0, u8a_js_1.u8aToHex)(xxhashAsU8a(data, bitLength));
}
exports.xxhashAsHex = xxhashAsHex;
