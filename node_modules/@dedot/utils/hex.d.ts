import { HexString } from './types.js';
/**
 * Converts a hex string to a Uint8Array.
 *
 * @param {HexString | string} input - The hex string to be converted to a Uint8Array.
 * If the string starts with '0x', it will be removed before conversion.
 * @returns {Uint8Array} The Uint8Array representation of the hex string.
 */
export declare function hexToU8a(input: HexString | string): Uint8Array;
/**
 * Converts a hex string to a string.
 *
 * @param {HexString | string} input - The hex string to be converted to a string.
 * @returns {string} The string representation of the hex string.
 */
export declare function hexToString(input: HexString | string): string;
/**
 * Check if a hex is zero
 * - isZeroHash('0x000000') returns `true`
 * - isZeroHash('0x000001') returns `false`
 *
 * @param input {HexString}
 */
export declare const isZeroHex: (input: HexString) => boolean;
/**
 * Add '0x' prefix to a hex string if it doesn't have one
 *
 * @param input {HexString}
 */
export declare const hexAddPrefix: (input?: HexString | string) => HexString;
/**
 * Remove '0x' prefix from a hex string if it has one
 *
 * @param input {HexString}
 */
export declare const hexStripPrefix: (input?: HexString | string) => string;
