"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageKind = void 0;
/**
 * A type of supported crypto.
 */
var StorageKind;
(function (StorageKind) {
    // Persistent storage is non-revertible and not fork-aware. It means that any value
    // set by the offchain worker triggered at block `N(hash1)` is persisted even
    // if that block is reverted as non-canonical and is available for the worker
    // that is re-run at block `N(hash2)`.
    // This storage can be used by offchain workers to handle forks
    // and coordinate offchain workers running on different forks.
    StorageKind["PERSISTENT"] = "PERSISTENT";
    // Local storage is revertible and fork-aware. It means that any value
    // set by the offchain worker triggered at block `N(hash1)` is reverted
    // if that block is reverted as non-canonical and is NOT available for the worker
    // that is re-run at block `N(hash2)`.
    StorageKind["LOCAL"] = "LOCAL";
})(StorageKind || (exports.StorageKind = StorageKind = {}));
