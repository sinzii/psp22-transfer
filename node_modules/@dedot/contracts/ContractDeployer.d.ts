import { ISubstrateClient } from '@dedot/api';
import { Hash } from '@dedot/codecs';
import { TypinkRegistry } from './TypinkRegistry.js';
import { ContractMetadata, GenericContractApi, ExecutionOptions } from './types/index.js';
export declare class ContractDeployer<ContractApi extends GenericContractApi = GenericContractApi> {
    #private;
    readonly client: ISubstrateClient<ContractApi['types']['ChainApi']>;
    constructor(client: ISubstrateClient<ContractApi['types']['ChainApi']>, metadata: ContractMetadata | string, codeHashOrWasm: Hash | Uint8Array | string, options?: ExecutionOptions);
    get metadata(): ContractMetadata;
    get registry(): TypinkRegistry;
    get tx(): ContractApi['constructorTx'];
    get query(): ContractApi['constructorQuery'];
    get options(): ExecutionOptions | undefined;
}
