"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TxExecutor = void 0;
const utils_1 = require("@dedot/utils");
const index_js_1 = require("./abstract/index.js");
class TxExecutor extends index_js_1.ContractExecutor {
    doExecute(message) {
        const meta = this.findTxMessage(message);
        (0, utils_1.assert)(meta, `Tx message not found: ${message}`);
        const callFn = (...params) => {
            const { args } = meta;
            (0, utils_1.assert)(params.length === args.length + 1, `Expected ${args.length + 1} arguments, got ${params.length}`);
            const txCallOptions = params[args.length];
            const { value = 0n, gasLimit, storageDepositLimit } = txCallOptions;
            (0, utils_1.assert)(gasLimit, 'Expected a gas limit in ContractTxOptions');
            const formattedInputs = args.map((arg, index) => this.tryEncode(arg, params[index]));
            const bytes = (0, utils_1.u8aToHex)((0, utils_1.concatU8a)((0, utils_1.hexToU8a)(meta.selector), ...formattedInputs));
            return this.client.tx.contracts.call(this.address, value, gasLimit, storageDepositLimit, bytes);
        };
        callFn.meta = meta;
        return callFn;
    }
}
exports.TxExecutor = TxExecutor;
