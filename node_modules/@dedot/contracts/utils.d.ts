import { ISubstrateClient } from '@dedot/api';
import { SubstrateApi } from '@dedot/api/chaintypes';
import { PortableType, TypeDef } from '@dedot/codecs';
import { GenericSubstrateApi, RpcVersion } from '@dedot/types';
import { Executor } from './executor/index.js';
import { ContractMetadata, ContractTypeDef, ReturnFlags } from './types/index.js';
export declare const extractContractTypes: (contractMetadata: ContractMetadata) => PortableType[];
export declare const normalizeContractTypeDef: (def: ContractTypeDef) => TypeDef;
export declare const parseRawMetadata: (rawMetadata: string) => ContractMetadata;
export declare function newProxyChain<ChainApi extends GenericSubstrateApi>(carrier: Executor<ChainApi>): unknown;
export declare function ensureSupportContractsPallet(client: ISubstrateClient<SubstrateApi[RpcVersion]>): void;
export declare function normalizeLabel(label?: string): string;
export declare function toReturnFlags(bits: number): ReturnFlags;
