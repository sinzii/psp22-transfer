import { ISubstrateClient } from '@dedot/api';
import { AccountId32, AccountId32Like } from '@dedot/codecs';
import { GenericSubstrateApi } from '@dedot/types';
import { TypinkRegistry } from '../../TypinkRegistry.js';
import { ContractCallMessage, ExecutionOptions } from '../../types/index.js';
import { Executor } from './Executor.js';
export declare abstract class ContractExecutor<ChainApi extends GenericSubstrateApi> extends Executor<ChainApi> {
    readonly address: AccountId32;
    constructor(client: ISubstrateClient<ChainApi>, registry: TypinkRegistry, address: AccountId32Like, options?: ExecutionOptions);
    protected findMessage(message: string): ContractCallMessage | undefined;
    protected findTxMessage(message: string): ContractCallMessage | undefined;
}
