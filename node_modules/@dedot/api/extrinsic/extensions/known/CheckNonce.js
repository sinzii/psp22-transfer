import { assert, numberToHex } from '@dedot/utils';
import { SignedExtension } from '../SignedExtension.js';
/**
 * @description Nonce check and increment to give replay protection for transactions.
 */
export class CheckNonce extends SignedExtension {
    async init() {
        this.data = this.payloadOptions.nonce || (await this.#getNonce());
    }
    async #getNonce() {
        const { signerAddress } = this.options || {};
        assert(signerAddress, 'Signer address not found');
        try {
            return (await this.client.query.system.account(signerAddress)).nonce;
        }
        catch { }
        try {
            return await this.client.call.accountNonceApi.accountNonce(signerAddress);
        }
        catch { }
        // TODO fallback to api.rpc.system_accountNextIndex if needed
        return 0;
    }
    toPayload() {
        return {
            nonce: numberToHex(this.data),
        };
    }
}
