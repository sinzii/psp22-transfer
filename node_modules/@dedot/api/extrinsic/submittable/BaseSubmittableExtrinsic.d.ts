import { BlockHash, Extrinsic, Hash } from '@dedot/codecs';
import { AddressOrPair, Callback, IRuntimeTxCall, ISubmittableExtrinsic, ISubmittableResult, PayloadOptions, SignerOptions, TxPaymentInfo, Unsub } from '@dedot/types';
import { HexString } from '@dedot/utils';
import type { FrameSystemEventRecord } from '../../chaintypes/index.js';
import type { ISubstrateClient } from '../../types.js';
export declare abstract class BaseSubmittableExtrinsic extends Extrinsic implements ISubmittableExtrinsic {
    #private;
    readonly client: ISubstrateClient;
    constructor(client: ISubstrateClient, call: IRuntimeTxCall);
    paymentInfo(account: AddressOrPair, options?: Partial<PayloadOptions>): Promise<TxPaymentInfo>;
    sign(fromAccount: AddressOrPair, options?: Partial<SignerOptions>): Promise<this>;
    signAndSend(account: AddressOrPair, options?: Partial<SignerOptions>): Promise<Hash>;
    signAndSend(account: AddressOrPair, callback: Callback<ISubmittableResult>): Promise<Unsub>;
    signAndSend(account: AddressOrPair, options: Partial<SignerOptions>, callback?: Callback<ISubmittableResult>): Promise<Unsub>;
    send(): Promise<Hash>;
    send(callback: Callback): Promise<Unsub>;
    protected getSystemEventsAt(hash: BlockHash): Promise<FrameSystemEventRecord[]>;
    toHex(): HexString;
}
