import type { DispatchError, DispatchInfo, Hash } from '@dedot/codecs';
import type { IEventRecord, ISubmittableResult, TxStatus } from '@dedot/types';
import type { FrameSystemEventRecord } from '../../chaintypes/index.js';
export interface SubmittableResultInputs<E extends IEventRecord = FrameSystemEventRecord> {
    events?: E[];
    status: TxStatus;
    txHash: Hash;
    txIndex?: number;
}
export declare class SubmittableResult<E extends IEventRecord = FrameSystemEventRecord> implements ISubmittableResult<E> {
    status: TxStatus;
    events: E[];
    dispatchInfo?: DispatchInfo;
    dispatchError?: DispatchError;
    txHash: Hash;
    txIndex?: number;
    constructor({ events, status, txHash, txIndex }: SubmittableResultInputs<E>);
    _extractDispatchInfo(): [DispatchInfo | undefined, DispatchError | undefined];
}
