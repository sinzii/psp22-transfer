import type { IEventRecord, PalletEvent } from '@dedot/types';
/**
 * Checks if the provided object is a valid `PalletEvent`.
 *
 * @param event - The object to be checked.
 * @returns `true` if the object is a valid `PalletEvent`, `false` otherwise.
 *
 * @remarks
 * A `PalletEvent` is expected to have the following properties:
 * - `pallet`: A string representing the name of the pallet associated with the event.
 * - `palletEvent`: An object or string representing the details of the pallet event.
 *
 * This function validates the presence and type of these properties in the provided object.
 */
export declare const isPalletEvent: (event: any) => event is PalletEvent<string, string, any>;
/**
 * Checks if the provided object is a valid `IEventRecord`.
 *
 * @param event - The object to be checked.
 * @returns `true` if the object is a valid `IEventRecord`, `false` otherwise.
 *
 * @remarks
 * An `IEventRecord` is expected to have the following properties:
 * - `phase`: An object representing the phase of the event.
 * - `event`: An object representing the event details.
 * - `topics`: An array of topics associated with the event.
 *
 * This function validates the presence and type of these properties in the provided object.
 */
export declare const isEventRecord: (event: any) => event is IEventRecord<import("@dedot/types").IRuntimeEvent, `0x${string}`>;
