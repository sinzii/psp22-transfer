"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChargeAssetTxPayment = void 0;
const utils_1 = require("@dedot/utils");
const SignedExtension_js_1 = require("../SignedExtension.js");
/**
 * @name ChargeAssetTxPayment
 */
class ChargeAssetTxPayment extends SignedExtension_js_1.SignedExtension {
    async init() {
        const { tip, assetId } = this.payloadOptions;
        this.data = {
            tip: tip || 0n,
            assetId,
        };
    }
    toPayload() {
        const { tip, assetId } = this.data;
        return {
            tip: (0, utils_1.bnToHex)(tip),
            // @ts-ignore
            assetId: this.#encodeAssetId(assetId),
        };
    }
    #encodeAssetId(assetId) {
        if (assetId === null || assetId === undefined) {
            return undefined;
        }
        return (0, utils_1.u8aToHex)(this.$AssetId().tryEncode(assetId));
    }
    $AssetId() {
        const extensionTypeDef = this.registry.findType(this.signedExtensionDef.typeId);
        (0, utils_1.assert)(extensionTypeDef.typeDef.type === 'Struct');
        const assetIdTypeDef = extensionTypeDef.typeDef.value.fields.find((f) => f.name === 'asset_id');
        const $codec = this.registry.findCodec(assetIdTypeDef.typeId);
        const codecMetadata = $codec.metadata[0];
        if (codecMetadata.name === '$.option') {
            return codecMetadata.args[0]; // inner shape
        }
        return $codec;
    }
}
exports.ChargeAssetTxPayment = ChargeAssetTxPayment;
