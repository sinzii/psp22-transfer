import * as $ from '@dedot/shape';
export declare const $ApiId: $.Shape<`0x${string}`, `0x${string}`>;
/**
 * A vector of pairs of `ApiId` and a `u32` for version.
 */
export declare const $ApisVec: $.Shape<(readonly [`0x${string}`, number])[], [`0x${string}`, number][]>;
/**
 * Runtime version.
 * This should not be thought of as classic Semver (major/minor/tiny).
 * This triplet have different semantics and mis-interpretation could cause problems.
 *
 * In particular: bug fixes should result in an increment of `spec_version` and possibly
 * `authoring_version`, absolutely not `impl_version` since they change the semantics of the
 * runtime.
 *
 * Ref: https://github.com/paritytech/polkadot-sdk/blob/0e49ed72aa365475e30069a5c30e251a009fdacf/substrate/primitives/version/src/lib.rs#L152-L215
 */
export declare const $RuntimeVersion: $.Shape<{
    specName: string;
    implName: string;
    authoringVersion: number;
    specVersion: number;
    implVersion: number;
    apis: (readonly [`0x${string}`, number])[];
    transactionVersion: number;
    stateVersion: number;
}, {
    specName: string;
    implName: string;
    authoringVersion: number;
    specVersion: number;
    implVersion: number;
    apis: [`0x${string}`, number][];
    transactionVersion: number;
    stateVersion: number;
}>;
export type RuntimeVersion = $.Input<typeof $RuntimeVersion>;
