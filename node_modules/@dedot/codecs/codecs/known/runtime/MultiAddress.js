import * as $ from '@dedot/shape';
import { $AccountId32, AccountId32 } from '../../generic/index.js';
/**
 * A multi-format address wrapper for on-chain accounts.
 */
export const $MultiAddressBase = $.Enum({
    /// It's an account ID (pubkey).
    Id: $AccountId32, // TODO generalize AccountId
    /// It's an account index.
    Index: $.compactU32,
    /// It's some arbitrary raw bytes.
    Raw: $.PrefixedHex,
    /// It's a 32 byte representation.
    Address32: $.FixedHex(32),
    /// Its a 20 byte representation.
    Address20: $.FixedHex(20),
});
export const $MultiAddress = $.transform({
    $base: $MultiAddressBase,
    encode: (value) => {
        if (typeof value === 'string' || value instanceof AccountId32) {
            return { type: 'Id', value };
        }
        return value;
    },
    decode: (value) => value,
});
