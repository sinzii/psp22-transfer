"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$ExtrinsicVersion = exports.EXTRINSIC_FORMAT_VERSION = void 0;
const $ = __importStar(require("@dedot/shape"));
const utils_1 = require("@dedot/utils");
exports.EXTRINSIC_FORMAT_VERSION = 4;
// Only support V4 for now!
const verifyExtrinsicVersion = (actualVersion) => {
    (0, utils_1.assert)(actualVersion === exports.EXTRINSIC_FORMAT_VERSION, `Unsupported extrinsic format version, found: ${actualVersion}`);
};
exports.$ExtrinsicVersion = $.createShape({
    metadata: $.metadata('$ExtrinsicVersion'),
    staticSize: 1,
    subDecode(buffer) {
        const firstByte = buffer.array[buffer.index++];
        // https://github.com/paritytech/polkadot-sdk/blob/943697fa693a4da6ef481ef93df522accb7d0583/substrate/primitives/runtime/src/generic/unchecked_extrinsic.rs#L266-L270
        const signed = (firstByte & 0b1000_0000) !== 0;
        const version = firstByte & 0b0111_1111;
        verifyExtrinsicVersion(version);
        return {
            signed,
            version,
        };
    },
    subEncode(buffer, value) {
        const { signed, version } = value;
        verifyExtrinsicVersion(version);
        // https://github.com/paritytech/polkadot-sdk/blob/943697fa693a4da6ef481ef93df522accb7d0583/substrate/primitives/runtime/src/generic/unchecked_extrinsic.rs#L300-L308
        buffer.array[buffer.index++] = (+signed << 7) | version;
    },
});
