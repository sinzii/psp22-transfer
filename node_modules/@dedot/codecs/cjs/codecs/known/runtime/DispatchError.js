"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.$DispatchError = exports.$ArithmeticError = exports.$TransactionalError = exports.$ModuleError = exports.$TokenError = void 0;
const $ = __importStar(require("@dedot/shape"));
/**
 * DispatchError
 */
exports.$TokenError = $.FlatEnum([
    /// Funds are unavailable.
    'FundsUnavailable',
    /// Some part of the balance gives the only provider reference to the account and thus cannot
    /// be (re)moved.
    'OnlyProvider',
    /// Account cannot exist with the funds that would be given.
    'BelowMinimum',
    /// Account cannot be created.
    'CannotCreate',
    /// The asset in question is unknown.
    'UnknownAsset',
    /// Funds exist but are frozen.
    'Frozen',
    /// Operation is not supported by the asset.
    'Unsupported',
    /// Account cannot be created for a held balance.
    'CannotCreateHold',
    /// Withdrawal would cause unwanted loss of account.
    'NotExpendable',
    /// Account cannot receive the assets.
    'Blocked',
]);
exports.$ModuleError = $.Struct({
    index: $.u8,
    error: $.FixedHex(4),
});
exports.$TransactionalError = $.FlatEnum([
    /// Too many transactional layers have been spawned.
    'LimitReached',
    /// A transactional layer was expected, but does not exist.
    'NoLayer',
]);
exports.$ArithmeticError = $.FlatEnum([
    /// Underflow.
    'Underflow',
    /// Overflow.
    'Overflow',
    /// Division by zero.
    'DivisionByZero',
]);
exports.$DispatchError = $.Enum({
    /// Some error occurred.
    Other: null,
    /// Failed to lookup some data.
    CannotLookup: null,
    /// A bad origin.
    BadOrigin: null,
    /// A custom error in a module.
    Module: exports.$ModuleError,
    /// At least one consumer is remaining so the account cannot be destroyed.
    ConsumerRemaining: null,
    /// There are no providers so the account cannot be created.
    NoProviders: null,
    /// There are too many consumers so the account cannot be created.
    TooManyConsumers: null,
    /// An error to do with tokens.
    Token: exports.$TokenError,
    /// An arithmetic error.
    Arithmetic: exports.$ArithmeticError,
    /// The number of transactional layers has been reached, or we are not in a transactional
    /// layer.
    Transactional: exports.$TransactionalError,
    /// Resources exhausted, e.g. attempt to read/write data which is too large to manipulate.
    Exhausted: null,
    /// The state is corrupt; this is generally not going to fix itself.
    Corruption: null,
    /// Some resource (e.g. a preimage) is unavailable right now. This might fix itself later.
    Unavailable: null,
    /// Root origin is not allowed.
    RootNotAllowed: null,
});
