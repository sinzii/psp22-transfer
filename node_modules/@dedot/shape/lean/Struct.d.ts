import { AnyShape, Expand, Input, Output, Shape } from '../deshape.js';
export type StructMembers<T extends AnyShape> = {
    [prop: string]: T;
};
export type InputStructShape<T extends AnyShape, A extends StructMembers<T>> = Expand<{
    [K in keyof A]: Input<A[K]>;
}>;
export type OutputStructShape<T extends AnyShape, A extends StructMembers<T>> = Expand<{
    [K in keyof A]: Output<A[K]>;
}>;
export declare const Struct: <T extends AnyShape, A extends StructMembers<T>>(members: A) => Shape<InputStructShape<T, A>, OutputStructShape<T, A>>;
