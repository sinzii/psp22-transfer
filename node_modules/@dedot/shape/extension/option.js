import { isHex, isNull, isU8a, isUndefined } from '@dedot/utils';
import { option as originalOption } from '../deshape.js';
function shouldDecodeInner(input) {
    return !(isHex(input) || isU8a(input));
}
function isNone(input) {
    return isUndefined(input) || isNull(input) || input === '0x';
}
function decodeInner($shape, input) {
    // @ts-ignore
    const $some = $shape.metadata[0].args[0];
    return $some.tryDecode(input);
}
export function option($some) {
    const shaped = originalOption($some);
    shaped.registerDecoder(isNone, (_, input) => undefined);
    shaped.registerDecoder(shouldDecodeInner, decodeInner);
    return shaped;
}
export const Option = option;
