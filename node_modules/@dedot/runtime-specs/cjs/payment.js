"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionPaymentCallApi = exports.TransactionPaymentApi = void 0;
const codecs_1 = require("@dedot/codecs");
const $ = __importStar(require("@dedot/shape"));
/**
 * Ref: https://github.com/paritytech/polkadot-sdk/blob/36957d676033b23b46edb66e6d7dcd13da11e19a/substrate/frame/transaction-payment/rpc/runtime-api/src/lib.rs#L26-L36
 */
exports.TransactionPaymentApi = [
    {
        methods: {
            queryInfo: {
                docs: 'The transaction info',
                params: [
                    {
                        name: 'uxt',
                        type: 'OpaqueExtrinsic',
                        codec: codecs_1.$OpaqueExtrinsic,
                    },
                    {
                        name: 'len',
                        type: 'u32',
                        codec: $.u32,
                    },
                ],
                type: 'RuntimeDispatchInfo',
                codec: codecs_1.$RuntimeDispatchInfo,
            },
            queryFeeDetails: {
                docs: 'The transaction fee details',
                params: [
                    {
                        name: 'uxt',
                        type: 'OpaqueExtrinsic',
                        codec: codecs_1.$OpaqueExtrinsic,
                    },
                    {
                        name: 'len',
                        type: 'u32',
                        codec: $.u32,
                    },
                ],
                type: 'FeeDetails',
                codec: codecs_1.$FeeDetails,
            },
            queryLengthToFee: {
                docs: 'Query the output of the current LengthToFee given some input',
                params: [
                    {
                        name: 'length',
                        type: 'u32',
                        codec: $.u32,
                    },
                ],
                type: 'Balance',
                codec: codecs_1.$Balance,
            },
            queryWeightToFee: {
                docs: 'Query the output of the current WeightToFee given some input',
                params: [
                    {
                        name: 'weight',
                        type: 'Weight',
                        codec: codecs_1.$Weight,
                    },
                ],
                type: 'Balance',
                codec: codecs_1.$Balance,
            },
        },
        version: 4,
    },
];
exports.TransactionPaymentCallApi = [
    {
        methods: {
            //TODO: Generate RuntimeCallLike for better suggestion when using.
            queryCallInfo: {
                docs: 'Query information of a dispatch class, weight, and fee of a given encoded `Call`.',
                params: [
                    {
                        name: 'call',
                        type: 'RawBytes',
                        codec: codecs_1.$RawBytes,
                    },
                    {
                        name: 'len',
                        type: 'u32',
                        codec: $.u32,
                    },
                ],
                type: 'RuntimeDispatchInfo',
                codec: codecs_1.$RuntimeDispatchInfo,
            },
            queryCallFeeDetails: {
                docs: 'Query fee details of a given encoded `Call`.',
                params: [
                    {
                        name: 'call',
                        type: 'RawBytes',
                        codec: codecs_1.$RawBytes,
                    },
                    {
                        name: 'len',
                        type: 'u32',
                        codec: $.u32,
                    },
                ],
                type: 'FeeDetails',
                codec: codecs_1.$FeeDetails,
            },
            queryLengthToFee: {
                docs: 'Query the output of the current LengthToFee given some input',
                params: [
                    {
                        name: 'length',
                        type: 'u32',
                        codec: $.u32,
                    },
                ],
                type: 'Balance',
                codec: codecs_1.$Balance,
            },
            queryWeightToFee: {
                docs: 'Query the output of the current WeightToFee given some input',
                params: [
                    {
                        name: 'weight',
                        type: 'Weight',
                        codec: codecs_1.$Weight,
                    },
                ],
                type: 'Balance',
                codec: codecs_1.$Balance,
            },
        },
        version: 3,
    },
];
