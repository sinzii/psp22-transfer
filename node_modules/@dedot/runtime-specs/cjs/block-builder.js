"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockBuilder = void 0;
const codecs_1 = require("@dedot/codecs");
const $ = __importStar(require("@dedot/shape"));
/**
 * Ref: https://github.com/paritytech/polkadot-sdk/blob/bc53b9a03a742f8b658806a01a7bf853cb9a86cd/substrate/primitives/block-builder/src/lib.rs#L25-L52
 */
exports.BlockBuilder = [
    {
        methods: {
            // Type changed in v6
            applyExtrinsic: {
                description: 'Apply the given extrinsic.',
                params: [
                    {
                        name: 'extrinsic',
                        type: 'OpaqueExtrinsic',
                        codec: codecs_1.$OpaqueExtrinsic,
                    },
                ],
                type: 'ApplyExtrinsicResult',
                codec: codecs_1.$ApplyExtrinsicResult,
            },
            checkInherents: {
                description: 'Check that the inherents are valid.',
                params: [
                    {
                        name: 'block',
                        type: 'Block',
                        codec: codecs_1.$Block,
                    },
                    {
                        name: 'data',
                        type: 'InherentData',
                        codec: codecs_1.$InherentData,
                    },
                ],
                type: 'CheckInherentsResult',
                codec: codecs_1.$CheckInherentsResult,
            },
            inherentExtrinsics: {
                description: 'Generate inherent extrinsics.',
                params: [
                    {
                        name: 'inherent',
                        type: 'InherentData',
                        codec: codecs_1.$InherentData,
                    },
                ],
                type: 'Array<OpaqueExtrinsic>',
                codec: $.Array(codecs_1.$OpaqueExtrinsic),
            },
            // Renamed in v3 from finalise_block
            finalizeBlock: {
                description: 'Finish the current block.',
                params: [],
                type: 'Header',
                codec: codecs_1.$Header,
            },
        },
        version: 6,
    },
];
