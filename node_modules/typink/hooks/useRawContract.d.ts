import { Contract, ContractMetadata, ExecutionOptions, GenericContractApi } from 'dedot/contracts';
interface UseRawContract<T extends GenericContractApi = GenericContractApi> {
    contract: Contract<T> | undefined;
}
/**
 * A custom React hook for creating and managing a raw contract instance.
 *
 * This hook initializes a contract based on the provided metadata and address,
 * and updates it when relevant dependencies change.
 *
 * @param {string | ContractMetadata} [metadata] - The contract metadata or its string representation
 * @param {string} [address] - The address of the contract
 * @param {ExecutionOptions} [options={}] - Additional execution options for the contract
 * @returns {UseRawContract<T>} An object containing the contract instance or undefined
 */
export declare function useRawContract<T extends GenericContractApi = GenericContractApi>(metadata?: string | ContractMetadata, address?: string, options?: ExecutionOptions): UseRawContract<T>;
export {};
