import { NetworkInfo } from '../../types.js';
import { ISubstrateClient } from 'dedot';
import { SubstrateApi } from 'dedot/chaintypes';
import { RpcVersion } from 'dedot/types';
export type CompatibleSubstrateClient = ISubstrateClient<SubstrateApi[RpcVersion]>;
export type UseClient = {
    ready: boolean;
    client?: CompatibleSubstrateClient;
};
export type UseClientOptions = {
    cacheMetadata: boolean;
};
/**
 * A custom React hook that initializes and manages a Dedot client connection.
 *
 * This hook handles the creation, connection, and disconnection of a Dedot client
 * based on the provided network information. It supports both legacy and new
 * JSON-RPC APIs.
 *
 * @param network - Optional. The network information used to establish the connection.
 *                  If not provided, the client will be reset to undefined.
 * @param options - Optional. Configuration options for the client initialization.
 * @param options.cacheMetadata - Whether to cache metadata. Defaults to false.
 *
 * @returns An object containing:
 *          - ready: A boolean indicating whether the client is ready for use.
 *          - client: The initialized Substrate client, or undefined if not ready.
 */
export declare function useInitializeClient(network?: NetworkInfo, options?: UseClientOptions): UseClient;
