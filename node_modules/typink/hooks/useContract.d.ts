import { Contract, ExecutionOptions, GenericContractApi } from 'dedot/contracts';
export type UseContract<T extends GenericContractApi = GenericContractApi> = {
    contract?: Contract<T>;
};
/**
 * A React hook for initializing and managing a Contract instance.
 *
 * This hook creates a contract instance based on the provided contract ID and network information.
 * It automatically updates the contract instance when relevant dependencies change.
 *
 * @template T - The type of the contract API, extending GenericContractApi
 * @param {string} contractId - The unique identifier of the contract deployment
 * @param {ExecutionOptions} [options={}] - Optional execution options for the contract
 * @returns {UseContract<T>} An object containing the contract instance, if successfully initialized
 * @throws {TypinkError} If the contract deployment is not found on the specified network
 */
export declare function useContract<T extends GenericContractApi = GenericContractApi>(contractId: string, options?: ExecutionOptions): UseContract<T>;
