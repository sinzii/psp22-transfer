import { InjectedAccount } from '../types.js';
import { Wallet } from '../wallets/index.js';
import { WalletProviderProps } from './WalletProvider.js';
export interface WalletSetupContextProps {
    appName: string;
    connectWallet: (id: string) => void;
    disconnect: () => void;
    connectedWalletId?: string;
    connectedWallet?: Wallet;
    wallets: Wallet[];
    setConnectedAccount: (account: InjectedAccount) => void;
    accounts: InjectedAccount[];
}
export declare const WalletSetupContext: import("react").Context<WalletSetupContextProps>;
export declare const useWalletSetup: () => WalletSetupContextProps;
export interface WalletSetupProviderProps extends WalletProviderProps {
    appName: string;
    wallets?: Wallet[];
}
/**
 * WalletSetupProvider is a component that manages wallet setup and connection state.
 * It provides context for wallet-related operations and wraps its children with necessary providers.
 *
 * @param props - The properties for the WalletSetupProvider component.
 * @param props.children - The child components to be wrapped by this provider.
 * @param props.signer - The initial signer object for the wallet.
 * @param props.connectedAccount - The initial connected account information.
 */
export declare function WalletSetupProvider({ children, signer: initialSigner, connectedAccount: initialConnectedAccount, wallets: initialWallets, appName }: WalletSetupProviderProps): import("react/jsx-runtime").JSX.Element;
