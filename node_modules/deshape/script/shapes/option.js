"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.option = void 0;
const mod_js_1 = require("../common/mod.js");
function option($some, none) {
    if ($some.metadata.some((x) => x.factory === option && x.args[1] === none)) {
        throw new Error("Nested option shape will not roundtrip correctly");
    }
    return (0, mod_js_1.createShape)({
        metadata: (0, mod_js_1.metadata)("$.option", (option), $some, ...(none === undefined ? [] : [none])),
        staticSize: 1 + $some.staticSize,
        subEncode(buffer, value) {
            if ((buffer.array[buffer.index++] = +(value !== none))) {
                $some.subEncode(buffer, value);
            }
        },
        subDecode(buffer) {
            switch (buffer.array[buffer.index++]) {
                case 0:
                    return none;
                case 1: {
                    const value = $some.subDecode(buffer);
                    if (value === none) {
                        throw new mod_js_1.ShapeDecodeError(this, buffer, "Some(None) will not roundtrip correctly");
                    }
                    return value;
                }
                default:
                    throw new mod_js_1.ShapeDecodeError(this, buffer, "Option discriminant neither 0 nor 1");
            }
        },
        subAssert(assert) {
            if (assert.value === none)
                return;
            $some.subAssert(assert);
        },
    });
}
exports.option = option;
//# sourceMappingURL=option.js.map