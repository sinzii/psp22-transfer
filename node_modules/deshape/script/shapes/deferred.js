"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deferred = void 0;
const mod_js_1 = require("../common/mod.js");
function deferred(getShape) {
    let $shape;
    const shape = (0, mod_js_1.createShape)({
        metadata: (0, mod_js_1.metadata)("$.deferred", deferred, getShape),
        staticSize: 0,
        subEncode(buffer, value) {
            $shape ??= getShape();
            buffer.pushAlloc($shape.staticSize);
            $shape.subEncode(buffer, value);
            buffer.popAlloc();
        },
        subDecode(buffer) {
            $shape ??= getShape();
            return $shape.subDecode(buffer);
        },
        subAssert(assert) {
            $shape ??= getShape();
            $shape.subAssert(assert);
        },
    });
    shape["_inspect"] = (inspect) => {
        // Use ._inspect manually so that Deno doesn't detect the circularity
        return `$.deferred(() => ${getShape()["_inspect"](inspect)})`;
    };
    return shape;
}
exports.deferred = deferred;
//# sourceMappingURL=deferred.js.map