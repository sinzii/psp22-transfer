import { Shape } from "../common/mod.js";
type ArrayOfLength<T, L extends number, A extends T[] = []> = number extends L ? T[] : L extends A["length"] ? A : ArrayOfLength<T, L, [...A, T]>;
export declare function sizedArray<L extends number, I, O>($el: Shape<I, O>, length: L): Shape<Readonly<ArrayOfLength<I, L>>, ArrayOfLength<O, L>>;
export declare function array<I, O = I>($el: Shape<I, O>): Shape<readonly I[], O[]>;
export declare const uint8Array: Shape<Uint8Array>;
export declare function sizedUint8Array(length: number): Shape<Uint8Array>;
export {};
