export class ShapeError extends Error {
    constructor(shape, message) {
        super(message);
        Object.defineProperty(this, "shape", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: shape
        });
    }
}
export class ShapeAssertError extends ShapeError {
    constructor(shape, value, message) {
        super(shape, message);
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: value
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "ShapeAssertError"
        });
    }
}
export class ShapeEncodeError extends ShapeError {
    constructor(shape, value, message) {
        super(shape, message);
        Object.defineProperty(this, "value", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: value
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "ShapeEncodeError"
        });
    }
}
export class ShapeDecodeError extends ShapeError {
    constructor(shape, buffer, message) {
        super(shape, message);
        Object.defineProperty(this, "buffer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: buffer
        });
        Object.defineProperty(this, "name", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "ShapeDecodeError"
        });
    }
}
//# sourceMappingURL=util.js.map