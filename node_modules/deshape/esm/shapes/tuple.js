import { createShape, metadata } from "../common/mod.js";
export function tuple(...shapes) {
    return createShape({
        metadata: metadata("$.tuple", (tuple), ...shapes),
        staticSize: shapes.map((x) => x.staticSize).reduce((a, b) => a + b, 0),
        subEncode(buffer, value) {
            for (let i = 0; i < shapes.length; i++) {
                shapes[i].subEncode(buffer, value[i]);
            }
        },
        subDecode(buffer) {
            const value = Array(shapes.length);
            for (let i = 0; i < shapes.length; i++) {
                value[i] = shapes[i].subDecode(buffer);
            }
            return value;
        },
        subAssert(assert) {
            assert.instanceof(this, Array);
            assert.key(this, "length").equals(this, shapes.length);
            for (let i = 0; i < shapes.length; i++) {
                shapes[i].subAssert(assert.key(this, i));
            }
        },
    });
}
//# sourceMappingURL=tuple.js.map